@model ProjectClosure.Models.Search

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}


<style>
    #progress {
        text-align: center;
        z-index: 1000000;
        overflow: auto;
        height: 100%;
    }

    #load {
        width: 100%;
        height: 100%;
        position: fixed;
        z-index: 9999;
        background: url("https://www.creditmutuel.fr/cmne/fr/banques/webservices/nswr/images/loading.gif") no-repeat center center rgba(0,0,0,0.26);
        /*background:url("../../Content/Processing.gif") no-repeat center center rgba(0,0,0,0.25);*/
    }

    thead {
        color: white;
        background-color: #34c4f9 !important;
    }

    .label {
        color: #34c4f9;
    }

    h2 {
        border-bottom: 3px solid #cc9900;
        font: 2.75em/1.75em Georgia, serif;
        color: #996600;
    }
</style>

<div id="progress" class="modal">
    <div class="center">
        <img src="~/Content/loader4.gif" />
    </div>
</div>

<h2 style="color: #34c4f9 "> Trial Balance</h2>

@using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
<div class="container">
    <br />

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.FromDate, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control ", required = "", @type = "Date", @placeholder = "dd-mm-yyyy" } })
                        @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.ToDate, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control ", required = "", @type = "Date", @placeholder = "dd-mm-yyyy" } })
                        @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Division, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Division, new SelectList(ViewBag.Division, "Value", "Text"), new { @class = "form-control", multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.Division, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Project, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Project, new SelectList(ViewBag.Project, "Value", "Text"), new { @class = "form-control", multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.Project, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CostCenter, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.CostCenter, new SelectList(ViewBag.CostCenter, "Value", "Text"), new { @class = "form-control", multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.CostCenter, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Site, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Site, new SelectList(ViewBag.Site, "Value", "Text"), new { @class = "form-control", multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.Site, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Activity, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Activity, new SelectList(ViewBag.Activity, "Value", "Text"), new { @class = "form-control", multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.Activity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.ServiceCode, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.ServiceCode, new SelectList(ViewBag.ServiceCode, "Value", "Text"), new { @class = "form-control", multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.ServiceCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.AccountGroup, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AccountGroup, new SelectList(ViewBag.AcGrp, "Value", "Text"), new { @class = "form-control", multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.AccountGroup, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Account, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Account, new SelectList(ViewBag.Ac, "Value", "Text"), new { @class = "form-control", multiple = "multiple", @id = "Account" })
                        @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-offset-10 col-md-2">
                <div class="form-group">
                    @*<button type="button" class="btn btn-primary" id="btExcel">Excel</button>*@
                    <button type="button" class="btn btn-primary" id="btnok">Load</button>
                    <button type="button" class="btn btn-primary" id="btnClose" name="Close">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div id="searchResults">

    </div>
</div>
}

@section Scripts {
    <script src="~/Scripts/FClient.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/js/bootstrap-multiselect.js"></script>

    <link href="~/Content/toastr.min.css" rel="stylesheet" />
    <script src="~/Scripts/toastr.js"></script>

    <script>
        var compId=@ViewBag.CompId;
        let selectedProject = "";
        let Accountid = "";
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "500",
            "hideDuration": "500",
            "timeOut": "2500",
            "extendedTimeOut": "500",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        var multiselectConfig = {
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterBehavior: 'text',
            selectAllJustVisible: false,
            selectAllText: 'Select All',
            buttonWidth: '280px',
            dropRight: false,
            maxHeight: 250,
            includeResetOption: false,
            nonSelectedText: 'Choose an Option'
        };

        $(window).on("load", function () {
            debugger;
            getSetPropertyForMastersField();
            var date = new Date($.now());
            var dateString = (date.getFullYear() + '-'
                + ('0' + (date.getMonth() + 1)).slice(-2)
                + '-' + ('0' + (date.getDate())).slice(-2));
            $('#FromDate').val(dateString);
            $('#ToDate').val(dateString);
            $('#Project').multiselect(multiselectConfig);
            $('#Division').multiselect(multiselectConfig);
            $('#CostCenter').multiselect(multiselectConfig);
            $('#Site').multiselect(multiselectConfig);
            $('#Activity').multiselect(multiselectConfig);
            $('#ServiceCode').multiselect(multiselectConfig);
            $('#Account').multiselect(multiselectConfig);
            $('#AccountGroup').multiselect(multiselectConfig);
        });



        var path = '@System.Web.Configuration.WebConfigurationManager.AppSettings["IpAddress"]';
            var domain ='@System.Web.Configuration.WebConfigurationManager.AppSettings["domain"]';

        //----------------------------- report method calling ------------------------------------

        $("#btnok").click(function () {
            $("#progress").show();
            debugger
            var CompanyId=compId;
            selectedProjects = "";
            selectedDivisions = "";
            selectedCostCenters = "";
            selectedSites = "";
            selectedActivities = "";
            selectedServiceCode = "";
            selectedDivisionNames = "";
            selectedCostCenterNames = "";
            selectedAcs = "";
            selectedAcGrps = "";
            selectedAcsName = "";
            selectedAcGrpsName = "";

            var $el = $("#Project");
            var a =@Html.Raw(Json.Encode(@ViewBag.Project));
            if ($el.find('option:selected').length != a.length) {
                $el.find('option:selected').each(function () {
                    if (selectedProjects == "")
                        selectedProjects = $(this).val();
                    else
                        selectedProjects = selectedProjects + "," + $(this).val();
                    //selectedProjects.push($(this).val());
                });
            }

            var $el1 = $("#Division");
            var b = @Html.Raw(Json.Encode(@ViewBag.Division));
            if ($el1.find('option:selected').length != b.length) {
                $el1.find('option:selected').each(function () {
                    if (selectedDivisions == "") {
                        selectedDivisions = $(this).val();
                        selectedDivisionNames = $(this).text();
                    }
                    else {
                        selectedDivisions = selectedDivisions + "," + $(this).val();
                        selectedDivisionNames = selectedDivisionNames + "," + $(this).text();
                    }
                });
            }

            var $el2 = $("#CostCenter");
            var c = @Html.Raw(Json.Encode(@ViewBag.CostCenter));
            if ($el2.find('option:selected').length != c.length) {
                $el2.find('option:selected').each(function () {
                    if (selectedCostCenters == "") {
                        selectedCostCenters = $(this).val();
                        selectedCostCenterNames = $(this).text();
                    }
                    else {
                        selectedCostCenters = selectedCostCenters + "," + $(this).val();
                        selectedCostCenterNames = selectedCostCenterNames + "," + $(this).text();
                    }
                });
            }
            var $el3 = $("#Site");
            var d = @Html.Raw(Json.Encode(@ViewBag.Site));
            if ($el3.find('option:selected').length != d.length) {
                $el3.find('option:selected').each(function () {
                    if (selectedSites == "")
                        selectedSites = $(this).val();
                    else
                        selectedSites = selectedSites + "," + $(this).val();
                    //selectedSites.push($(this).val());
                });
            }
            var $el4 = $("#Activity");
            var e = @Html.Raw(Json.Encode(@ViewBag.Activity));
            if ($el4.find('option:selected').length != e.length) {
                $el4.find('option:selected').each(function () {
                    if (selectedActivities == "")
                        selectedActivities = $(this).val();
                    else
                        selectedActivities = selectedActivities + "," + $(this).val();
                    //selectedActivities.push($(this).val());
                });
            }
            var $el5 = $("#ServiceCode");
            var f = @Html.Raw(Json.Encode(@ViewBag.ServiceCode));
            if ($el5.find('option:selected').length != f.length) {
                $el5.find('option:selected').each(function () {
                    if (selectedServiceCode == "")
                        selectedServiceCode = $(this).val();
                    else
                        selectedServiceCode = selectedServiceCode + "," + $(this).val();
                    //selectedServiceCode.push($(this).val());
                });
            }
            var $el7 = $("#Account");
            var Ac =@Html.Raw(Json.Encode(@ViewBag.Ac));
            if ($el7.find('option:selected').length == Ac.length) {
                selectedAcsName = "All";
                selectedAcs = "";
            }
            else {
                $el7.find('option:selected').each(function () {
                    if (selectedAcs == "") {
                        selectedAcs = $(this).val();
                        //selectedAcsName = $(this).text();
                    }
                    else {
                        selectedAcs = selectedAcs + "," + $(this).val();
                        //selectedAcsName = selectedAcsName + "," + $(this).text();
                    }
                });
            }
            var $el6 = $("#AccountGroup");
            var g = @Html.Raw(Json.Encode(@ViewBag.AcGrp));
            if ($el6.find('option:selected').length != g.length) {
                $el6.find('option:selected').each(function () {
                    if (selectedAcGrps == "") {
                        selectedAcGrps = $(this).val();
                        //selectedAcGrpsName = $(this).text();
                    }
                    else {
                        selectedAcGrps = selectedAcGrps + "," + $(this).val();
                        //selectedAcGrpsName = selectedAcGrpsName + "," + $(this).text();
                    }
                });
            }
            var FromDate = $("#FromDate").val();

            var ToDate = $("#ToDate").val();


            if (selectedCostCenterNames == "")
                selectedCostCenterNames = "All";
            if (selectedDivisionNames == "")
                selectedDivisionNames = "All";
            //if (selectedAcsName == "")
            //    selectedAcsName = "All";
            //if (selectedAcGrpsName == "")
            //    selectedAcGrpsName = "All";
            debugger;
            var _objsearch = {
                Cid : CompanyId,
                FromDate : FromDate,
                ToDate : ToDate,
                Project : selectedProjects,
                Division :selectedDivisions,
                CostCenter : selectedCostCenters,
                Site : selectedSites,
                Activity :selectedActivities,
                ServiceCode : selectedServiceCode,
                DivisionNames : selectedDivisionNames,
                CostCenterNames : selectedCostCenterNames,
                AcIds : selectedAcs,
                AcNames:selectedAcsName,
                AcGrpIds : selectedAcGrps,
                AcGrpNames : selectedAcGrpsName
            };
            $.ajax({
                url: path + domain + '/TrialBalance/TrialBalanceReport2',
                dataType: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(_objsearch),
                async: true,
                processData: false,
                cache: false,
                success: function (response) {
                    debugger;
                    $("#progress").hide();
                    console.log(response, "Success")
                    if (response == 'Success') {
                        window.location.href = path + domain + '/TrialBalance/TrialBalanceReport';
                    }
                    else {
                        $("#searchResults").html('<span style="color:red;fond:bold">' + response + '</span>');
                    }
                },
                error: function (err) {
                    console.log(err)
                }
            })
        });



        $('#btnClose').click(function () {
            debugger;
            Focus8WAPI.gotoHomePage();
        });

        //--------------------------------------------- Focus8W js file -------------------------------

        function getSetPropertyForMastersField() {
            // Focus8WAPI.getGlobalValue("fnGetValueCallBack1", "COMPANYID", 1);
            Focus8WAPI.getGlobalValue("fnGetValueCallBack1", "", 1);

        }

        function fnGetValueCallBack1(objWrapperResult) {

            var responseData = objWrapperResult.data;
            if (objWrapperResult.requestType == 1) {
                if (objWrapperResult.iRequestId == 1) {
                    CCode = responseData.CompanyId;//this is the company id
                }
            }
        }
    </script>
}

